function Array.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 0
gt
not
not
if-goto Array.new.IfElse1
push constant 1
pop argument 0
label Array.new.IfElse1
push argument 0
call Memory.alloc 1
pop this 0
push argument 0
pop this 1
push constant 0
pop this 2
push pointer 0
return
function Array.dispose 0
push argument 0
pop pointer 0
push this 0
call Memory.free 1
pop temp 0
push constant 0
return
function Array.capacity 0
push argument 0
pop pointer 0
push this 1
return
function Array.size 0
push argument 0
pop pointer 0
push this 2
return
function Array.get 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
push this 2
lt
not
or
not
if-goto Array.get.IfElse1
push constant 0
return
label Array.get.IfElse1
push this 0
push argument 1
add
pop pointer 1
push that 0
return
function Array.set 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
push this 1
lt
not
or
not
if-goto Array.set.IfElse1
push constant 0
return
label Array.set.IfElse1
push this 0
push argument 1
add
pop pointer 1
push argument 2
pop that 0
push argument 1
push this 2
lt
not
not
if-goto Array.set.IfElse2
push argument 1
push constant 1
add
pop this 2
label Array.set.IfElse2
push constant 0
return
function Array.append 0
push argument 0
pop pointer 0
push this 2
push this 1
lt
not
not
if-goto Array.append.IfElse1
push pointer 0
call Array.grow 1
pop temp 0
label Array.append.IfElse1
push this 0
push this 2
add
pop pointer 1
push argument 1
pop that 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function Array.grow 3
push argument 0
pop pointer 0
push this 1
push constant 2
call Math.multiply 2
pop local 1
push local 1
call Memory.alloc 1
pop local 0
push local 0
push constant 0
eq
not
if-goto Array.grow.IfElse1
push constant 0
return
label Array.grow.IfElse1
push this 0
push local 0
push this 2
call Array.copy 3
pop temp 0
push this 0
call Memory.free 1
pop temp 0
push local 0
pop this 0
push local 1
pop this 1
push constant 0
return
function Array.shrinkToFit 1
push argument 0
pop pointer 0
push this 2
push this 1
lt
not
if-goto Array.shrinkToFit.IfElse1
push this 2
call Memory.alloc 1
pop local 0
push local 0
push constant 0
eq
not
if-goto Array.shrinkToFit.IfElse2
push constant 0
return
label Array.shrinkToFit.IfElse2
push this 0
push local 0
push this 2
call Array.copy 3
pop temp 0
push this 0
call Memory.free 1
pop temp 0
push local 0
pop this 0
push this 2
pop this 1
label Array.shrinkToFit.IfElse1
push constant 0
return
function Array.resize 1
push argument 0
pop pointer 0
push argument 1
push constant 0
gt
not
not
if-goto Array.resize.IfElse1
push constant 0
return
label Array.resize.IfElse1
push argument 1
call Memory.alloc 1
pop local 0
push local 0
push constant 0
eq
not
if-goto Array.resize.IfElse2
push constant 0
return
label Array.resize.IfElse2
push this 2
push argument 1
gt
not
not
if-goto Array.resize.IfElse3
push this 0
push local 0
push this 2
call Array.copy 3
pop temp 0
label Array.resize.IfElse3
push this 0
push local 0
push argument 1
call Array.copy 3
pop temp 0
push argument 1
pop this 2
push this 0
call Memory.free 1
pop temp 0
push local 0
pop this 0
push argument 1
pop this 1
push constant 0
return
function Array.copy 1
push constant 0
pop local 0
label WHILE_START_Array.copy1
push local 0
push argument 2
lt
not
if-goto WHILE_END_Array.copy1
push argument 1
push local 0
add
pop pointer 1
push argument 0
push local 0
add
pop pointer 1
push that 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_Array.copy1
label WHILE_END_Array.copy1
push constant 0
return
function Array.copyRange 1
push constant 0
pop local 0
label WHILE_START_Array.copyRange1
push local 0
push argument 4
lt
not
if-goto WHILE_END_Array.copyRange1
push argument 2
push argument 3
push local 0
add
add
pop pointer 1
push argument 0
push argument 1
push local 0
add
add
pop pointer 1
push that 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_Array.copyRange1
label WHILE_END_Array.copyRange1
push constant 0
return
function Array.fill 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_START_Array.fill1
push local 0
push this 1
lt
not
if-goto WHILE_END_Array.fill1
push this 0
push local 0
add
pop pointer 1
push argument 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_Array.fill1
label WHILE_END_Array.fill1
push this 1
pop this 2
push constant 0
return
function Array.clear 0
push argument 0
pop pointer 0
push constant 0
pop this 2
push constant 0
return
function Array.isEmpty 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
return
function Array.__getitem__ 0
push argument 0
pop pointer 0
push this 0
push argument 1
add
pop pointer 1
push that 0
return
function Array.__setitem__ 0
push argument 0
pop pointer 0
push this 0
push argument 1
add
pop pointer 1
push argument 2
pop that 0
push constant 0
return

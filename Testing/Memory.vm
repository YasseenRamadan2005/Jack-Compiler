function Memory.init.0 0
push constant 0
pop static 0
push constant 2048
push static 0
add
pop pointer 1
push constant 14335
pop that 0
push constant 2049
push static 0
add
pop pointer 1
push constant 0
pop that 0
push constant 2050
push static 0
add
pop pointer 1
push constant 0
pop that 0
push constant 0
return
function Memory.peek.1 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke.2 0
push argument 0
push static 0
add
pop pointer 1
push argument 1
pop that 0
push constant 0
return
function Memory.alloc.1 2
push constant 2048
pop local 0
label Memory.alloc.1.WHILE.1_BEGIN
push local 0
not
if-goto Memory.alloc.1.WHILE.1_END
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 3
add
gt
not
if-goto Memory.alloc.1.IF.1_END
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
push argument 0
sub
push constant 1
sub
pop local 1
push constant 0
push local 0
add
pop pointer 1
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
sub
push constant 1
sub
pop that 0
push constant 1
neg
push local 1
add
pop pointer 1
push argument 0
pop that 0
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 5
lt
not
if-goto Memory.alloc.1.IF.2_END
push local 0
call Memory.mergeWithNeighbor.1 1
pop temp 0
label Memory.alloc.1.IF.2_END
push local 1
return
label Memory.alloc.1.IF.1_END
push constant 2
push local 0
add
pop pointer 1
push that 0
pop local 0
goto Memory.alloc.1.WHILE.1_BEGIN
label Memory.alloc.1.WHILE.1_END
push constant 0
return
function Memory.deAlloc.1 2
push argument 0
push constant 2
sub
pop local 0
push constant 0
push local 0
add
pop pointer 1
push constant 1
neg
push argument 0
add
pop pointer 1
push that 0
pop that 0
push constant 1
push local 0
add
pop pointer 1
push constant 0
pop that 0
push constant 2
push local 0
add
pop pointer 1
push constant 0
pop that 0
push constant 2048
pop local 1
label Memory.deAlloc.1.WHILE.1_BEGIN
push constant 2
push local 1
add
pop pointer 1
push that 0
not
if-goto Memory.deAlloc.1.WHILE.1_END
push constant 2
push local 1
add
pop pointer 1
push that 0
pop local 1
goto Memory.deAlloc.1.WHILE.1_BEGIN
label Memory.deAlloc.1.WHILE.1_END
push constant 2
push local 1
add
pop pointer 1
push local 0
pop that 0
push constant 1
push local 0
add
pop pointer 1
push local 1
pop that 0
push local 0
call Memory.mergeWithNeighbor.1 1
pop temp 0
push constant 0
return
function Memory.mergeWithNeighbor.1 3
push constant 1
push argument 0
add
pop pointer 1
push that 0
pop local 0
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop local 1
push local 1
not
if-goto Memory.mergeWithNeighbor.1.IF.1_END
push argument 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
push constant 1
add
push local 1
eq
not
if-goto Memory.mergeWithNeighbor.1.IF.2_END
push constant 0
push argument 0
add
pop pointer 1
push constant 0
push argument 0
add
pop pointer 1
push that 0
push constant 0
push local 1
add
pop pointer 1
push that 0
add
push constant 1
add
pop that 0
push constant 2
push argument 0
add
pop pointer 1
push constant 2
push local 1
add
pop pointer 1
push that 0
pop that 0
push constant 2
push local 1
add
pop pointer 1
push that 0
not
if-goto Memory.mergeWithNeighbor.1.IF.3_END
push constant 2
push local 1
add
pop pointer 1
push that 0
push constant 1
add
call Memory.peek.1 1
pop local 2
push constant 2
push local 1
add
pop pointer 1
push that 0
push constant 1
add
push argument 0
call Memory.poke.2 2
pop temp 0
label Memory.mergeWithNeighbor.1.IF.3_END
label Memory.mergeWithNeighbor.1.IF.2_END
label Memory.mergeWithNeighbor.1.IF.1_END
push local 0
not
if-goto Memory.mergeWithNeighbor.1.IF.4_END
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
push constant 1
add
push argument 0
eq
not
if-goto Memory.mergeWithNeighbor.1.IF.5_END
push constant 0
push local 0
add
pop pointer 1
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
push constant 1
add
pop that 0
push constant 2
push local 0
add
pop pointer 1
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop that 0
push constant 2
push argument 0
add
pop pointer 1
push that 0
not
if-goto Memory.mergeWithNeighbor.1.IF.6_END
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop local 1
push constant 1
push local 1
add
pop pointer 1
push local 0
pop that 0
label Memory.mergeWithNeighbor.1.IF.6_END
label Memory.mergeWithNeighbor.1.IF.5_END
label Memory.mergeWithNeighbor.1.IF.4_END
push constant 0
return

function Memory.init 2
push constant 2048
push constant 7
add
pop local 0
push constant 14423
push local 0
push constant 0
add
pop pointer 1
pop that 0
push constant 1
push local 0
push constant 1
add
pop pointer 1
pop that 0
push constant 0
push local 0
push constant 2
add
pop pointer 1
pop that 0
push constant 0
push local 0
push constant 3
add
pop pointer 1
pop that 0
push local 0
call Memory.create_foot 1
pop temp 0
push constant 2048
push constant 6
add
push local 0
call Memory.add_node 2
pop temp 0
push constant 0
return
function Memory.alloc 5
push argument 0
call Memory.getBinIndex 1
pop local 0
push constant 2048
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 0
call Memory.get_best_fit 2
pop local 2
label WHILE_START_Memory.alloc1
push local 2
push constant 0
eq
push constant 0
eq
if-goto WHILE_END_Memory.alloc1
push local 0
push constant 1
add
push constant 7
lt
not
push constant 0
eq
if-goto Memory.alloc.IfElse1
push constant 0
return
label Memory.alloc.IfElse1
push local 0
push constant 1
add
pop local 0
push constant 2048
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 0
call Memory.get_best_fit 2
pop local 2
goto WHILE_START_Memory.alloc1
label WHILE_END_Memory.alloc1
push constant 2048
push local 2
push constant 0
add
pop pointer 1
push that 0
call Memory.getBinIndex 1
add
push local 2
call Memory.remove_node 2
pop temp 0
push local 2
push constant 0
add
pop pointer 1
push that 0
push argument 0
sub
push constant 5
sub
pop local 3
push local 3
push constant 5
lt
not
push constant 0
eq
if-goto Memory.alloc.IfElse2
push argument 0
push local 2
push constant 0
add
pop pointer 1
pop that 0
push constant 0
push local 2
push constant 1
add
pop pointer 1
pop that 0
push local 2
call Memory.create_foot 1
pop temp 0
push local 2
push argument 0
add
push constant 4
add
pop local 4
push local 3
push local 4
push constant 0
add
pop pointer 1
pop that 0
push constant 1
push local 4
push constant 1
add
pop pointer 1
pop that 0
push local 4
call Memory.create_foot 1
pop temp 0
push constant 2048
push local 3
call Memory.getBinIndex 1
add
push local 4
call Memory.add_node 2
pop temp 0
label Memory.alloc.IfElse2
push constant 0
push local 2
push constant 1
add
pop pointer 1
pop that 0
push local 2
call Memory.create_foot 1
pop temp 0
push local 2
push constant 1
add
return
function Memory.calloc 1
push argument 0
call Memory.alloc 1
pop local 0
push local 0
not
push constant 0
eq
if-goto Memory.calloc.IfElse1
push constant 0
return
label Memory.calloc.IfElse1
label WHILE_START_Memory.calloc1
push argument 0
push constant 0
gt
push constant 0
eq
if-goto WHILE_END_Memory.calloc1
push argument 0
push constant 1
sub
pop argument 0
push constant 0
push local 0
push argument 0
add
pop pointer 1
pop that 0
goto WHILE_START_Memory.calloc1
label WHILE_END_Memory.calloc1
push local 0
return
function Memory.deAlloc 3
push argument 0
push constant 1
sub
pop local 0
push constant 1
push local 0
push constant 1
add
pop pointer 1
pop that 0
push local 0
call Memory.getPrevNode 1
pop local 1
push local 0
call Memory.getNextNode 1
pop local 2
push local 1
push local 1
push constant 1
add
pop pointer 1
push that 0
push constant 1
eq
and
push constant 0
eq
if-goto Memory.deAlloc.IfElse1
push constant 2048
push local 1
push constant 0
add
pop pointer 1
push that 0
call Memory.getBinIndex 1
add
push local 1
call Memory.remove_node 2
pop temp 0
push local 1
push constant 0
add
pop pointer 1
push that 0
push local 0
push constant 0
add
pop pointer 1
push that 0
add
push constant 5
add
push local 1
push constant 0
add
pop pointer 1
pop that 0
push local 1
call Memory.create_foot 1
pop temp 0
push local 1
pop local 0
label Memory.deAlloc.IfElse1
push local 2
push local 2
push constant 1
add
pop pointer 1
push that 0
push constant 1
eq
and
push constant 0
eq
if-goto Memory.deAlloc.IfElse2
push constant 2048
push local 2
push constant 0
add
pop pointer 1
push that 0
call Memory.getBinIndex 1
add
push local 2
call Memory.remove_node 2
pop temp 0
push local 0
push constant 0
add
pop pointer 1
push that 0
push local 2
push constant 0
add
pop pointer 1
push that 0
add
push constant 5
add
push local 0
push constant 0
add
pop pointer 1
pop that 0
push local 0
call Memory.create_foot 1
pop temp 0
label Memory.deAlloc.IfElse2
push constant 2048
push local 0
push constant 0
add
pop pointer 1
push that 0
push pointer 0
call Memory.getBinIndex 2
add
push local 0
call Memory.add_node 2
pop temp 0
push constant 0
return
function Memory.realloc 4
push argument 0
push constant 0
eq
push constant 0
eq
if-goto Memory.realloc.IfElse1
push argument 1
call Memory.alloc 1
return
label Memory.realloc.IfElse1
push argument 0
push constant 1
sub
pop local 3
push local 3
push constant 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
call Memory.alloc 1
pop local 1
push local 1
push constant 0
eq
push constant 0
eq
if-goto Memory.realloc.IfElse2
push constant 0
return
label Memory.realloc.IfElse2
push local 0
push argument 1
gt
not
push constant 0
eq
if-goto Memory.realloc.IfElse3
push local 0
pop local 2
label Memory.realloc.IfElse3
push argument 1
pop local 2
push argument 0
push local 1
push local 2
call Memory.copy 3
pop temp 0
push argument 0
call Memory.deAlloc 1
pop temp 0
push local 1
return
function Memory.copy 1
push constant 0
pop local 0
label WHILE_START_Memory.copy1
push local 0
push argument 2
lt
push constant 0
eq
if-goto WHILE_END_Memory.copy1
push argument 0
push local 0
add
pop pointer 1
push that 0
push argument 1
push local 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_Memory.copy1
label WHILE_END_Memory.copy1
push constant 0
return
function Memory.remove_node 0
push argument 1
push constant 2
add
pop pointer 1
push that 0
push constant 0
eq
not
push constant 0
eq
if-goto Memory.remove_node.IfElse1
push argument 1
push constant 3
add
pop pointer 1
push that 0
push argument 1
push constant 2
add
push constant 3
add
pop pointer 1
pop that 0
label Memory.remove_node.IfElse1
push argument 1
push constant 3
add
pop pointer 1
push that 0
push argument 0
push constant 0
add
pop pointer 1
pop that 0
push argument 1
push constant 3
add
pop pointer 1
push that 0
push constant 0
eq
not
push constant 0
eq
if-goto Memory.remove_node.IfElse2
push argument 1
push constant 2
add
pop pointer 1
push that 0
push argument 1
push constant 3
add
push constant 2
add
pop pointer 1
pop that 0
label Memory.remove_node.IfElse2
push constant 0
push argument 1
push constant 2
add
pop pointer 1
pop that 0
push constant 0
push argument 1
push constant 3
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.getBinIndex 1
push constant 0
pop local 0
label WHILE_START_Memory.getBinIndex1
push local 0
push constant 7
lt
push constant 0
eq
if-goto WHILE_END_Memory.getBinIndex1
push argument 0
push local 0
push constant 1
add
push constant 16
call Math.multiply 2
gt
not
push constant 0
eq
if-goto Memory.getBinIndex.IfElse1
push local 0
return
label Memory.getBinIndex.IfElse1
push local 0
push constant 1
add
pop local 0
goto WHILE_START_Memory.getBinIndex1
label WHILE_END_Memory.getBinIndex1
push constant 7
push constant 1
sub
return
function Memory.get_best_fit 1
push argument 0
pop local 0
label WHILE_START_Memory.get_best_fit1
push local 0
push constant 0
eq
if-goto WHILE_END_Memory.get_best_fit1
push local 0
push constant 0
add
pop pointer 1
push that 0
push argument 1
lt
not
push constant 0
eq
if-goto Memory.get_best_fit.IfElse1
push local 0
return
label Memory.get_best_fit.IfElse1
push local 0
push constant 3
add
pop pointer 1
push that 0
pop local 0
goto WHILE_START_Memory.get_best_fit1
label WHILE_END_Memory.get_best_fit1
push constant 0
return
function Memory.create_foot 0
push argument 0
push argument 0
push argument 0
push constant 0
add
pop pointer 1
push that 0
push constant 5
add
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.add_node 2
push constant 0
push argument 1
push constant 2
add
pop pointer 1
pop that 0
push constant 0
push argument 1
push constant 3
add
pop pointer 1
pop that 0
push argument 0
push constant 0
add
pop pointer 1
push that 0
push constant 0
eq
push constant 0
eq
if-goto Memory.add_node.IfElse1
push argument 1
push argument 0
push constant 0
add
pop pointer 1
pop that 0
push constant 0
return
label Memory.add_node.IfElse1
push argument 0
push constant 0
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
label WHILE_START_Memory.add_node1
push local 0
push constant 0
eq
not
push local 0
push constant 0
add
pop pointer 1
push that 0
push argument 1
push constant 0
add
pop pointer 1
push that 0
gt
not
and
push constant 0
eq
if-goto WHILE_END_Memory.add_node1
push local 0
pop local 1
push local 0
push constant 3
add
pop pointer 1
push that 0
pop local 0
goto WHILE_START_Memory.add_node1
label WHILE_END_Memory.add_node1
push local 1
not
push constant 0
eq
if-goto Memory.add_node.IfElse2
push argument 0
push constant 0
add
pop pointer 1
push that 0
push argument 1
push constant 3
add
pop pointer 1
pop that 0
push argument 1
push argument 0
push constant 0
add
push constant 2
add
pop pointer 1
pop that 0
push argument 1
push argument 0
push constant 0
add
pop pointer 1
pop that 0
label Memory.add_node.IfElse2
push local 0
push argument 1
push constant 3
add
pop pointer 1
pop that 0
push local 1
push argument 1
push constant 2
add
pop pointer 1
pop that 0
push local 0
push constant 0
eq
if-goto Memory.add_node.IfElse3
push argument 1
push local 0
push constant 2
add
pop pointer 1
pop that 0
label Memory.add_node.IfElse3
push argument 1
push local 1
push constant 3
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.getPrevNode 1
push argument 0
push constant 5
sub
pop local 0
push local 0
push constant 0
add
pop pointer 1
push that 0
push local 0
add
push constant 5
add
push argument 0
eq
push constant 0
eq
if-goto Memory.getPrevNode.IfElse1
push local 0
return
label Memory.getPrevNode.IfElse1
push constant 0
return
function Memory.getNextNode 1
push argument 0
push argument 0
push constant 0
add
pop pointer 1
push that 0
add
push constant 5
add
pop local 0
push local 0
push constant 0
add
pop pointer 1
push that 0
push constant 0
gt
push constant 0
eq
if-goto Memory.getNextNode.IfElse1
push local 0
return
label Memory.getNextNode.IfElse1
push constant 0
return
function Memory.poke 0
push argument 1
push argument 0
push constant 0
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push constant 0
add
pop pointer 1
push that 0
return

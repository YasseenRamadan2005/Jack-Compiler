function Memory.init 0
push constant 0
pop static 0
push constant 2048
push static 0
add
push constant 14335
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2049
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2050
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 2
push constant 2048
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 3
add
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
sub
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
pop local 1
push constant 1
neg
push local 1
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 5
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Memory.mergeWithNeighbor 1
pop temp 0
label IF_FALSE1
push local 1
return
label IF_FALSE0
push constant 2
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.deAlloc 2
push argument 0
push constant 1
sub
pop local 0
push constant 0
push local 0
add
push constant 1
neg
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2048
pop local 1
label WHILE_EXP0
push constant 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
not
not
if-goto WHILE_END0
push constant 2
push local 1
add
pop pointer 1
push that 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 2
push local 1
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Memory.mergeWithNeighbor 1
pop temp 0
push constant 0
return
function Memory.realloc 3
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Memory.alloc 1
return
label IF_FALSE0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
label IF_FALSE1
push constant 1
neg
push argument 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push argument 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop local 2
push local 2
push constant 0
eq
not
push argument 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
push constant 1
add
push local 2
eq
and
push argument 1
push constant 0
push argument 0
add
pop pointer 1
push that 0
sub
push constant 0
push local 2
add
pop pointer 1
push that 0
gt
not
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
call Memory.mergeWithNeighbor 1
pop temp 0
push constant 1
neg
push argument 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
return
goto IF_END3
label IF_FALSE3
push argument 1
call Memory.alloc 1
pop local 1
push local 1
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
return
label IF_FALSE4
push argument 0
push local 1
push local 0
call Memory.copy 3
pop temp 0
push argument 0
call Memory.deAlloc 1
pop temp 0
push local 1
return
label IF_END3
goto IF_END2
label IF_FALSE2
push constant 1
neg
push argument 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
return
label IF_END2
function Memory.mergeWithNeighbor 3
push constant 1
push argument 0
add
pop pointer 1
push that 0
pop local 0
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
push constant 1
add
push local 1
eq
push constant 1
push local 1
add
pop pointer 1
push that 0
push argument 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push argument 0
add
push constant 0
push argument 0
add
pop pointer 1
push that 0
push constant 0
push local 1
add
pop pointer 1
push that 0
add
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 0
add
push constant 2
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
push local 1
add
pop pointer 1
push that 0
push constant 1
add
call Memory.peek 1
pop local 2
push constant 2
push local 1
add
pop pointer 1
push that 0
push constant 1
add
push argument 0
call Memory.poke 2
pop temp 0
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
push constant 1
add
push argument 0
eq
push constant 2
push local 0
add
pop pointer 1
push that 0
push argument 0
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
push argument 0
add
pop pointer 1
push that 0
pop local 1
push constant 1
push local 1
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
label IF_FALSE4
label IF_FALSE3
push constant 0
return
function Memory.set 0
label WHILE_EXP0
push argument 2
push constant 0
gt
not
if-goto WHILE_END0
push argument 2
push constant 1
sub
pop argument 2
push argument 2
push argument 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.clear 0
push argument 0
push constant 0
push argument 1
call Memory.set 3
pop temp 0
push constant 0
return
function Memory.copy 0
label WHILE_EXP0
push argument 2
push constant 0
gt
not
if-goto WHILE_END0
push argument 2
push constant 1
sub
pop argument 2
push argument 2
push argument 1
add
push argument 2
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return

function String.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
call Array.new 1
pop this 0
push pointer 0
return
function String.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push constant 0
return
function String.length 0
push argument 0
pop pointer 0
push this 0
call Array.length 1
return
function String.appendChar 0
push argument 0
pop pointer 0
push this 0
push argument 1
call Array.append 2
pop temp 0
push pointer 0
return
function String.charAt 0
push argument 0
pop pointer 0
push this 0
push argument 1
call Array.get 2
return
function String.setCharAt 0
push argument 0
pop pointer 0
push this 0
push argument 1
push argument 2
call Array.set 3
pop temp 0
push constant 0
return
function String.eraseLastChar 0
push argument 0
pop pointer 0
push this 0
call Array.removeLast 1
pop temp 0
push constant 0
return
function String.clear 0
push argument 0
pop pointer 0
push this 0
call Array.reset 1
pop temp 0
push constant 0
return
function String.equals 4
push argument 0
pop pointer 0
push this 0
call Array.length 1
pop local 1
push local 1
push argument 1
call String.length 1
eq
not
if-goto String.equals$IF_TRUE1
goto String.equals$IF_END1
label String.equals$IF_TRUE1
push constant 0
return
label String.equals$IF_END1
push constant 0
pop local 0
label String.equals_WHILE_EXP1
push local 0
push local 1
lt
not
if-goto String.equals_WHILE_END1
push this 0
push local 0
call Array.get 2
pop local 2
push argument 1
push local 0
call String.charAt 2
pop local 3
push local 2
push constant 97
lt
not
push local 2
push constant 123
lt
and
if-goto String.equals$IF_TRUE2
goto String.equals$IF_END2
label String.equals$IF_TRUE2
push local 2
push constant 32
sub
pop local 2
label String.equals$IF_END2
push local 3
push constant 97
lt
not
push local 3
push constant 123
lt
and
if-goto String.equals$IF_TRUE3
goto String.equals$IF_END3
label String.equals$IF_TRUE3
push local 3
push constant 32
sub
pop local 3
label String.equals$IF_END3
push local 2
push local 3
eq
not
if-goto String.equals$IF_TRUE4
goto String.equals$IF_END4
label String.equals$IF_TRUE4
push constant 0
return
label String.equals$IF_END4
push local 0
push constant 1
add
pop local 0
goto String.equals_WHILE_EXP1
label String.equals_WHILE_END1
push constant 0
not
return
function String.setInt 6
push argument 0
pop pointer 0
push this 0
call Array.reset 1
pop temp 0
push constant 0
pop local 4
push argument 1
push constant 0
eq
if-goto String.setInt$IF_TRUE1
goto String.setInt$IF_END1
label String.setInt$IF_TRUE1
push pointer 0
push constant 48
call String.appendChar 2
pop temp 0
push constant 0
return
label String.setInt$IF_END1
push argument 1
push constant 0
lt
if-goto String.setInt$IF_TRUE2
goto String.setInt$IF_END2
label String.setInt$IF_TRUE2
push constant 1
pop local 4
push argument 1
push constant 0
lt
push argument 1
push constant 32767
and
push constant 32767
eq
and
if-goto String.setInt$IF_TRUE3
goto String.setInt$IF_END3
label String.setInt$IF_TRUE3
push pointer 0
push constant 45
call String.appendChar 2
pop temp 0
push pointer 0
push constant 51
call String.appendChar 2
pop temp 0
push pointer 0
push constant 50
call String.appendChar 2
pop temp 0
push pointer 0
push constant 55
call String.appendChar 2
pop temp 0
push pointer 0
push constant 54
call String.appendChar 2
pop temp 0
push pointer 0
push constant 56
call String.appendChar 2
pop temp 0
push constant 0
return
label String.setInt$IF_END3
push argument 1
neg
pop argument 1
label String.setInt$IF_END2
push argument 1
pop local 2
push constant 0
pop local 3
label String.setInt_WHILE_EXP1
push local 2
push constant 0
gt
not
if-goto String.setInt_WHILE_END1
push local 2
push constant 10
call Math.divide 2
pop local 2
push local 3
push constant 1
add
pop local 3
goto String.setInt_WHILE_EXP1
label String.setInt_WHILE_END1
push local 3
call Array.new 1
pop local 5
push constant 0
pop local 1
label String.setInt_WHILE_EXP2
push argument 1
push constant 0
gt
not
if-goto String.setInt_WHILE_END2
push argument 1
push argument 1
push constant 10
call Math.divide 2
push constant 10
call Math.multiply 2
sub
pop local 0
push local 5
push local 0
push constant 48
add
call Array.append 2
pop temp 0
push argument 1
push constant 10
call Math.divide 2
pop argument 1
push local 1
push constant 1
add
pop local 1
goto String.setInt_WHILE_EXP2
label String.setInt_WHILE_END2
push local 4
push constant 1
eq
if-goto String.setInt$IF_TRUE4
goto String.setInt$IF_END4
label String.setInt$IF_TRUE4
push pointer 0
push constant 45
call String.appendChar 2
pop temp 0
label String.setInt$IF_END4
label String.setInt_WHILE_EXP3
push local 1
push constant 0
gt
not
if-goto String.setInt_WHILE_END3
push local 1
push constant 1
sub
pop local 1
push pointer 0
push local 5
push local 1
call Array.get 2
call String.appendChar 2
pop temp 0
goto String.setInt_WHILE_EXP3
label String.setInt_WHILE_END3
push local 5
call Array.dispose 1
pop temp 0
push constant 0
return
function String.intValue 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 1
pop local 3
push this 0
call Array.length 1
pop local 2
push constant 0
pop local 1
push local 2
push constant 0
gt
push this 0
push constant 0
call Array.get 2
push constant 45
eq
and
if-goto String.intValue$IF_TRUE1
goto String.intValue$IF_END1
label String.intValue$IF_TRUE1
push constant 1
neg
pop local 3
push constant 1
pop local 1
label String.intValue$IF_END1
label String.intValue_WHILE_EXP1
push local 1
push local 2
lt
not
if-goto String.intValue_WHILE_END1
push local 0
push constant 10
call Math.multiply 2
push this 0
push local 1
call Array.get 2
push constant 48
sub
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto String.intValue_WHILE_EXP1
label String.intValue_WHILE_END1
push local 0
push local 3
call Math.multiply 2
return

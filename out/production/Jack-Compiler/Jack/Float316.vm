function Float316.newZero 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push pointer 0
return
function Float316.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function Float316.s 0
push argument 0
pop pointer 0
push this 0
return
function Float316.e 0
push argument 0
pop pointer 0
push this 1
return
function Float316.m 0
push argument 0
pop pointer 0
push this 2
return
function Float316.swapSign 0
push argument 0
pop pointer 0
push constant 1
push this 0
sub
pop this 0
push constant 0
return
function Float316.halve 0
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto Float316.halve$IF_TRUE1
goto Float316.halve$IF_END1
label Float316.halve$IF_TRUE1
push this 1
push constant 1
sub
pop this 1
label Float316.halve$IF_END1
push constant 0
return
function Float316.quarter 0
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto Float316.quarter$IF_TRUE1
goto Float316.quarter$IF_END1
label Float316.quarter$IF_TRUE1
push this 1
push constant 2
sub
pop this 1
label Float316.quarter$IF_END1
push constant 0
return
function Float316.double 0
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto Float316.double$IF_TRUE1
goto Float316.double$IF_END1
label Float316.double$IF_TRUE1
push this 1
push constant 1
add
pop this 1
label Float316.double$IF_END1
push constant 0
return
function Float316.set 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push argument 3
pop this 2
push constant 0
return
function Float316.mul 16
push argument 1
call Float316.s 1
pop local 0
push argument 1
call Float316.e 1
pop local 1
push argument 1
call Float316.m 1
pop local 2
push argument 2
call Float316.s 1
pop local 3
push argument 2
call Float316.e 1
pop local 4
push argument 2
call Float316.m 1
pop local 5
push local 0
push local 3
add
push constant 1
and
pop local 6
push local 1
push constant 0
eq
push local 2
push constant 0
eq
and
push local 4
push constant 0
eq
push local 5
push constant 0
eq
and
or
if-goto Float316.mul$IF_TRUE1
goto Float316.mul$IF_END1
label Float316.mul$IF_TRUE1
push argument 0
push local 6
push constant 0
push constant 0
call Float316.set 4
pop temp 0
push constant 0
return
label Float316.mul$IF_END1
push local 1
push constant 127
eq
push local 2
push constant 8192
eq
and
if-goto Float316.mul$IF_TRUE2
goto Float316.mul$IF_END2
label Float316.mul$IF_TRUE2
push argument 0
push local 6
push local 4
push local 5
call Float316.set 4
pop temp 0
label Float316.mul$IF_END2
push local 4
push constant 127
eq
push local 5
push constant 8192
eq
and
if-goto Float316.mul$IF_TRUE3
goto Float316.mul$IF_END3
label Float316.mul$IF_TRUE3
push argument 0
push local 6
push local 1
push local 2
call Float316.set 4
pop temp 0
label Float316.mul$IF_END3
push local 1
push local 4
add
push constant 126
sub
pop local 7
push local 2
push constant 128
call Math.divide 2
pop local 9
push local 2
push constant 127
and
pop local 10
push local 5
push constant 128
call Math.divide 2
pop local 11
push local 5
push constant 127
and
pop local 12
push local 9
push local 12
call Math.multiply 2
pop local 13
push local 10
push local 11
call Math.multiply 2
pop local 14
push local 9
push local 11
call Math.multiply 2
pop local 15
push local 15
push local 13
push local 14
add
push constant 128
call Math.divide 2
add
pop local 8
push local 8
push constant 0
gt
if-goto Float316.mul$IF_TRUE4
goto Float316.mul$IF_END4
label Float316.mul$IF_TRUE4
label Float316.mul_WHILE_EXP1
push local 8
push constant 8192
lt
not
if-goto Float316.mul_WHILE_END1
push local 8
push local 8
add
pop local 8
push local 7
push constant 1
sub
pop local 7
goto Float316.mul_WHILE_EXP1
label Float316.mul_WHILE_END1
label Float316.mul$IF_END4
push argument 0
push local 6
push local 7
push local 8
call Float316.set 4
pop temp 0
push constant 0
return
function Float316.gt 3
push argument 0
pop pointer 0
push argument 1
call Float316.s 1
pop local 0
push argument 1
call Float316.e 1
pop local 1
push argument 1
call Float316.m 1
pop local 2
push this 0
push local 0
eq
not
if-goto Float316.gt$IF_TRUE1
goto Float316.gt$IF_END1
label Float316.gt$IF_TRUE1
push local 0
push this 0
gt
return
label Float316.gt$IF_END1
push this 0
push constant 0
eq
if-goto Float316.gt$IF_TRUE2
goto Float316.gt$IF_FALSE2
label Float316.gt$IF_TRUE2
push this 1
push local 1
eq
not
if-goto Float316.gt$IF_TRUE3
goto Float316.gt$IF_END3
label Float316.gt$IF_TRUE3
push this 1
push local 1
gt
return
label Float316.gt$IF_END3
push this 2
push local 2
gt
return
goto Float316.gt$IF_END2
label Float316.gt$IF_FALSE2
push this 1
push local 1
eq
not
if-goto Float316.gt$IF_TRUE4
goto Float316.gt$IF_END4
label Float316.gt$IF_TRUE4
push this 1
push local 1
lt
return
label Float316.gt$IF_END4
label Float316.gt$IF_END2
push this 2
push local 2
lt
return
function Float316.add 13
push argument 1
call Float316.s 1
pop local 0
push argument 1
call Float316.e 1
pop local 1
push argument 1
call Float316.m 1
pop local 2
push argument 2
call Float316.s 1
pop local 3
push argument 2
call Float316.e 1
pop local 4
push argument 2
call Float316.m 1
pop local 5
push local 1
push local 4
lt
push local 1
push local 4
eq
push local 2
push local 5
lt
and
or
if-goto Float316.add$IF_TRUE1
goto Float316.add$IF_FALSE1
label Float316.add$IF_TRUE1
push local 3
pop local 6
push local 4
pop local 7
push local 5
pop local 8
push local 0
pop local 9
push local 1
pop local 10
push local 2
pop local 11
goto Float316.add$IF_END1
label Float316.add$IF_FALSE1
push local 0
pop local 6
push local 1
pop local 7
push local 2
pop local 8
push local 3
pop local 9
push local 4
pop local 10
push local 5
pop local 11
label Float316.add$IF_END1
push local 10
push constant 0
eq
push local 11
push constant 0
eq
and
if-goto Float316.add$IF_TRUE2
goto Float316.add$IF_END2
label Float316.add$IF_TRUE2
push argument 0
push local 6
push local 7
push local 8
call Float316.set 4
pop temp 0
push constant 0
return
label Float316.add$IF_END2
push local 6
push local 9
eq
not
push local 7
push local 10
eq
and
push local 8
push local 11
eq
and
if-goto Float316.add$IF_TRUE3
goto Float316.add$IF_END3
label Float316.add$IF_TRUE3
push argument 0
push constant 0
push constant 0
push constant 0
call Float316.set 4
pop temp 0
push constant 0
return
label Float316.add$IF_END3
push local 7
push local 10
sub
pop local 12
label Float316.add_WHILE_EXP1
push local 12
push constant 0
gt
not
if-goto Float316.add_WHILE_END1
push local 11
push constant 2
call Math.divide 2
pop local 11
push local 12
push constant 1
sub
pop local 12
goto Float316.add_WHILE_EXP1
label Float316.add_WHILE_END1
push local 6
push local 9
eq
if-goto Float316.add$IF_TRUE4
goto Float316.add$IF_FALSE4
label Float316.add$IF_TRUE4
push local 8
push local 11
add
pop local 8
push local 8
push constant 16383
gt
if-goto Float316.add$IF_TRUE5
goto Float316.add$IF_END5
label Float316.add$IF_TRUE5
push local 8
push constant 2
call Math.divide 2
pop local 8
push local 7
push constant 1
add
pop local 7
label Float316.add$IF_END5
goto Float316.add$IF_END4
label Float316.add$IF_FALSE4
push local 8
push local 11
sub
pop local 8
label Float316.add_WHILE_EXP2
push local 8
push constant 8192
lt
not
if-goto Float316.add_WHILE_END2
push local 8
push local 8
add
pop local 8
push local 7
push constant 1
sub
pop local 7
goto Float316.add_WHILE_EXP2
label Float316.add_WHILE_END2
label Float316.add$IF_END4
push argument 0
push local 6
push local 7
push local 8
call Float316.set 4
pop temp 0
push constant 0
return
function Float316.sub 0
push argument 2
call Float316.swapSign 1
pop temp 0
push argument 0
push argument 1
push argument 2
call Float316.add 3
pop temp 0
push argument 1
push argument 2
eq
not
if-goto Float316.sub$IF_TRUE1
goto Float316.sub$IF_END1
label Float316.sub$IF_TRUE1
push argument 2
call Float316.swapSign 1
pop temp 0
label Float316.sub$IF_END1
push constant 0
return
function Float316.div 12
push argument 1
call Float316.s 1
pop local 0
push argument 1
call Float316.e 1
pop local 1
push argument 1
call Float316.m 1
pop local 2
push argument 2
call Float316.s 1
pop local 3
push argument 2
call Float316.e 1
pop local 4
push argument 2
call Float316.m 1
pop local 5
push local 0
push local 3
add
push constant 1
and
pop local 6
push local 1
push constant 0
eq
push local 2
push constant 0
eq
and
if-goto Float316.div$IF_TRUE1
goto Float316.div$IF_END1
label Float316.div$IF_TRUE1
push argument 0
push local 6
push constant 0
push constant 0
call Float316.set 4
pop temp 0
push constant 0
return
label Float316.div$IF_END1
push local 4
push constant 0
eq
push local 5
push constant 0
eq
and
if-goto Float316.div$IF_TRUE2
goto Float316.div$IF_END2
label Float316.div$IF_TRUE2
push constant 1
call Sys.error 1
pop temp 0
label Float316.div$IF_END2
push local 1
push constant 127
add
push local 4
sub
pop local 7
push local 2
pop local 9
push local 5
pop local 10
push constant 13
pop local 11
label Float316.div_WHILE_EXP1
push local 11
push constant 1
neg
gt
not
if-goto Float316.div_WHILE_END1
push local 9
push local 10
push constant 1
sub
gt
if-goto Float316.div$IF_TRUE3
goto Float316.div$IF_END3
label Float316.div$IF_TRUE3
push local 8
push local 11
call TwoToThePower.of 1
add
pop local 8
push local 9
push local 10
sub
pop local 9
label Float316.div$IF_END3
push local 10
push constant 2
call Math.divide 2
pop local 10
push local 11
push constant 1
sub
pop local 11
goto Float316.div_WHILE_EXP1
label Float316.div_WHILE_END1
label Float316.div_WHILE_EXP2
push local 8
push constant 8192
lt
not
if-goto Float316.div_WHILE_END2
push local 8
push local 8
add
pop local 8
push local 7
push constant 1
sub
pop local 7
goto Float316.div_WHILE_EXP2
label Float316.div_WHILE_END2
push argument 0
push local 6
push local 7
push local 8
call Float316.set 4
pop temp 0
push constant 0
return
function Float316.mod2 2
push argument 1
call Float316.e 1
push constant 127
sub
pop local 0
push constant 13
push local 0
sub
call TwoToThePower.of 1
pop local 1
push argument 1
call Float316.m 1
push local 1
and
push constant 0
gt
if-goto Float316.mod2$IF_TRUE1
goto Float316.mod2$IF_END1
label Float316.mod2$IF_TRUE1
push argument 0
push constant 0
push constant 127
push constant 8192
call Float316.set 4
pop temp 0
push constant 0
return
label Float316.mod2$IF_END1
push argument 0
push constant 0
push constant 0
push constant 0
call Float316.set 4
pop temp 0
push constant 0
return
function Float316.print 0
push argument 0
pop pointer 0
push this 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push this 2
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return

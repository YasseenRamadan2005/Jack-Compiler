class Shell {
    constant KEYBOARD_START_ADDRESS 24576;

    static int cursor;
    static String command;

    function void main() {
        var char character;
        let command = String.new(100);

        let cursor = 0;
        do Output.printChar(36); // '$'
        do Output.printChar(0);  // black square

        while (true) {
            // Wait for key press
            while (KEYBOARD_START_ADDRESS[0] = 0) {}

            let character = KEYBOARD_START_ADDRESS[0];

            if ((character = 128)) {
                // Handle Enter
                do Output.println();                 // move to new line
                do Shell.handleCommand(command);    // process command
                do command.dispose();               // cleanup old command
                let command = String.new(100);      // prepare for next line
                let cursor = 0;
                do Output.printChar(36);            // '$'
                do Output.printChar(0);             // black square
            } else {
                if ((character = 129) & (cursor > 0)) {
                    do Output.backSpace();
                    do Output.backSpace();
                    do Output.printChar(0);
                    let cursor = cursor - 1;
                } else {
                    if (~((character = 129) & (cursor = 0))) {
                        do Output.backSpace();
                        do Output.printChar(character);
                        do Output.printChar(0);
                        let cursor = cursor + 1;
                        do command.appendChar(character);
                    }
                }
            }

            let KEYBOARD_START_ADDRESS[0] = 0;
        }

        return;
    }

    function void handleCommand(String s) {
        var Array tokens;
        var Directory d;
        let d = Directory.getCWD();
        //let tokens = Shell.parseCommand(s);

        if (s.equals("cwd")) {
            do Output.printString(d.getName());
            do Output.println();
        }

        return;
    }

    // Parses a command string into an array of Strings
    function Array parseCommand(String s) {
        var Array result;
        var String token;
        var int len, i, wordCount, inWord, start, end, tokenIndex;
        var int j;

        let len = s.length();
        let i = 0;
        let wordCount = 0;
        let inWord = 0;

        // First pass: count the number of words
        while (i < len) {
            if ((s.charAt(i)) = 32) {
                let inWord = 0;
            } else {
                if (inWord = 0) {
                    let wordCount = wordCount + 1;
                    let inWord = 1;
                }
            }
            let i = i + 1;
        }

        let result = Array.new(wordCount);

        // Second pass: extract each word
        let i = 0;
        let tokenIndex = 0;
        let inWord = 0;
        let start = 0;

        while (i < len) {
            if ((s.charAt(i)) = 32) {
                if (inWord = 1) {
                    let inWord = 0;
                    let end = i;
                    let token = String.new(end - start);
                    
                    let j = start;
                    while (j < end) {
                        do token.appendChar(s.charAt(j));
                        let j = j + 1;
                    }
                    let result[tokenIndex] = token;
                    let tokenIndex = tokenIndex + 1;
                }
            } else {
                if (inWord = 0) {
                    let start = i;
                    let inWord = 1;
                }
            }
            let i = i + 1;
        }

        // If still in a word at the end of the string
        if (inWord = 1) {
            let token = String.new(i - start);
            let j = start;
            while (j < i) {
                do token.appendChar(s.charAt(j));
                let j = j + 1;
            }
            let result[tokenIndex] = token;
        }

        return result;
    }
}
class Element {
    field Plane plane;
    field Sphere sphere;

    constructor Element plane(Plane p) {
      let plane = p;
      let sphere = null;
      return this;
    }

    constructor Element sphere(Sphere s) {
      let sphere = s;
      let plane = null;
      return this;
    }

    method void dispose() {
      if (plane) {
        do plane.dispose();
      }
      if (sphere) {
        do sphere.dispose();
      }
      do Memory.deAlloc(this);
      return;
    }

    method Number intersect(Ray ray) {
      if (plane) {
        return plane.intersect(ray);
      }
      if (sphere) {
        return sphere.intersect(ray);
      }
      return null;
    }

    method Vec3 color(Vec3 hit_point) {
      if (plane) {
        return plane.color(hit_point);
      }
      if (sphere) {
        return sphere.color();
      }
      return null;
    }

    method Vec3 surface_normal(Vec3 hit_point) {
      if (plane) {
        return plane.surface_normal();
      }
      if (sphere) {
        return sphere.surface_normal(hit_point);
      }
      return null;
    }
}
